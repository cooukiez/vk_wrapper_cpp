cmake_minimum_required(VERSION 3.8)

project(VCW)

# set this to your imgui dir
set(IMGUI_DIR imgui)
set(VK_DIR "C:\\VulkanSDK\\1.3.280.0")
set(GLFW_DIR "C:\\glfw")
set(GLM_DIR "C:\\glm")

file(GLOB MAIN_SOURCES *.cpp)
file(GLOB_RECURSE VK_SOURCES vk/*.cpp)
file(GLOB_RECURSE RENDER_SOURCES render/*.cpp)

set(SOURCES)
list(APPEND SOURCES ${MAIN_SOURCES} ${VK_SOURCES} ${RENDER_SOURCES})

add_executable(main ${SOURCES})

target_link_directories(main PRIVATE ${VK_DIR}/Lib)
target_include_directories(main PRIVATE ${VK_DIR}/Include)
target_link_libraries(main PRIVATE "vulkan-1.lib")

target_link_directories(main PRIVATE ${GLFW_DIR}/lib-mingw-w64)
target_include_directories(main PRIVATE ${VK_DIR}/Include)
target_link_libraries(main PRIVATE "libglfw3.a")

target_link_directories(main PRIVATE ${GLM_DIR}/lib-mingw-w64)
target_link_libraries(main PRIVATE "libglfw3.a")

find_package (PkgConfig)
pkg_get_variable (STB_INCLUDEDIR stb includedir)
if (NOT STB_INCLUDEDIR)
    unset (STB_INCLUDEDIR)
    find_path (STB_INCLUDEDIR stb_image.h PATH_SUFFIXES stb)
endif ()
if (NOT STB_INCLUDEDIR)
    message (FATAL_ERROR "stb_image.h not found")
endif ()
target_include_directories(main PRIVATE ${STB_INCLUDEDIR})

target_sources(main PRIVATE
        ${IMGUI_DIR}/imgui.cpp
        ${IMGUI_DIR}/imgui_draw.cpp
        ${IMGUI_DIR}/imgui_widgets.cpp
        ${IMGUI_DIR}/imgui_tables.cpp
        ${IMGUI_DIR}/imgui_demo.cpp
        ${IMGUI_DIR}/backends/imgui_impl_vulkan.cpp
        ${IMGUI_DIR}/backends/imgui_impl_glfw.cpp)

target_include_directories(main PRIVATE ${IMGUI_DIR})

# set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Ofast")

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

add_custom_target(vert.spv
        COMMAND glslangValidator --quiet -V ${CMAKE_SOURCE_DIR}/shader.vert -o ${CMAKE_BINARY_DIR}/vert.spv)

add_custom_target(frag.spv
        COMMAND glslangValidator --quiet -V ${CMAKE_SOURCE_DIR}/shader.frag -o ${CMAKE_BINARY_DIR}/frag.spv)

add_dependencies(main vert.spv frag.spv)

file(COPY ${CMAKE_SOURCE_DIR}/textures DESTINATION ${CMAKE_BINARY_DIR})
